#CONFIGURAR USUARIO
git config --global user.name "Seu nome"
git config --global user.email "seuemail@gmail.com"

#INICIALIZAR REPOSITÓRIO
git init

#Trocar a branch default para Main
git config --global init.defaultBranch main

#ADICIONAR ARQUIVO AO CACHE DO GIT
git add comandos.txt
git add --all

#REMOVER ARQUIVO DO CACHE DO GIT
git rm --cached comandos.txt
git rm --cached -r .

#REGISTRAR ALTERAÇÕES (COMMIT)
git commit -m "Descricao da alteracao"

#CORRIGIR COMMIT (MAS EXCLUI ANTERIOR)
git commit --amend -m "Corrigindo alteracao"
git commit --amend --no-edit "Altera commit sem alterar mensagem"

#VER ALTERAÇÕES EM CACHE
git diff
git diff --cached   (Não comitado, mas adicionado ao cache)

#VER ALTERAÇÕES DE COMMITS
git log
git log --oneline
git log -1


#USAR COMMITS ANTERIORES
git checkout <commit hash>
VOLTA PARA VERSÃO ORIGINAL
git checkout master

#IGNORAR ARQUIVO USANDO GITIGNORE
touch .gitignore


#CLONAR REPOSITORIO
git clone gitrepo gitclone  / git clone <repo> <destinyfolder>

#ADICIONAR REPOSITÓRIO REMOTO
git remote origin <link>


#ATUALIZAR REPOSITÓRIO REMOTO
git remote set-url origin <linknovo>

#ENVIAR DADOS PARA O REPOSITÓRIO
git push origin master

#BAIXAR DADOS DO REPOSITÓRIO
git pull origin master

#EDITAR README
Ref: https://dillinger.io/

#CONFIGURAR SSH
cd ~/.ssh/
start .
eval $(ssh-agent)
ssh-add ~/.ssh/<keyname>

#LISTAR BRANCHS
git branch --list

#CRIAR  BRANCH
git branch <branch>
git checkout -b <branch>

#MUDAR BRANCH
git checkout <branch>
git switch <branch>

#SUBIR BRANCH PARA O SERVIDOR
git push --set-upstream origin develop
git push -u <branch>

#EXCLUIR BRANCH LOCAL
git branch -d <branch>

#EXCLUIR BRANCH REMOTA
git push --delete origin <branch>

#RENOMEAR BRANCH
git branch -m <nomeantigo> <nomenovo>

#MESCLAR BRANCHES
git merge <branch>

#PARAR MERGE
git   merge --abort


#VOLTAR PARA ESTADO DO ULTIMO COMMIT
git reset --hard


#CRIANDO TAGS
git tag <nome>
git tag  -a -m "Mensagem da tag" <nome>
git tag <nome> <hash_commit>
git tag  -a -m "Mensagem da tag" <nome> <hash_commit>


#COMPARAR TAGS
GIT DIFF <TAG1> <TAG2>

#REMOVENDO TAGS
git tag -d <TAG>
git push --delete origin <tag>

#SALVA MUDANÇAS NÃO COMMITADAS
git stash

#APLICA MUDANÇAS NÃO COMMITADAS
git stash apply
git stash apply stash@{1}

#REMOVER MUDANÇAS NÃO COMMITADAS
git stash pop
git stash drop stash@{1}